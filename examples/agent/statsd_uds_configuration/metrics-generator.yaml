apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-writer-script
data:
  metrics_writer.py: |
    import socket
    import time
    from datetime import datetime

    def write_metrics(sock):
        while True:
            now = datetime.now()
            sock.send(b"metric1:1|c\n")
            sock.send(b"metric2:20|g\n")
            timestamp_str = now.strftime("%Y-%m-%d %H:%M:%S")
            print(f"[{timestamp_str}]", flush=True)
            print("sock.send", flush=True)
            time.sleep(5)  # Sleep for 5 seconds before sending next metrics

    if __name__ == "__main__":
        sock = socket.socket(socket.AF_UNIX, socket.SOCK_DGRAM)
        try:
            sourcepath = '/var/run/obssocket/statsd.socket'
            print("try", flush=True)
            sock.connect(sourcepath)
            write_metrics(sock)
        except Exception as e:
            print(f"Error connecting to socket: {e}")
        finally:
            print("close", flush=True)
            sock.close()
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-writer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-writer
  template:
    metadata:
      labels:
        app: metrics-writer
    spec:
# You can set this based on where forwarder pod running. 
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - ip-10-0-5-244.us-west-2.compute.internal
      containers:
      - name: metrics-writer
        image: python:3.9-slim
        command: ["/bin/sh", "-c"]
        args: ['python3 /app/metrics_writer.py']
        volumeMounts:
        - name: script-volume
          mountPath: /app
        - name: obssocket
          mountPath: /var/run/obssocket
        stdin: true
      volumes:
      - name: script-volume
        configMap:
          name: metrics-writer-script
          items:
          - key: metrics_writer.py
            path: metrics_writer.py
      - name: obssocket
        hostPath:
          path: /tmp  # This assumes that /tmp/statsd.socket is accessible on the node
