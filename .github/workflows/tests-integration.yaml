name: Helm Charts Agent - Integration Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  

#Special permissions required for OIDC authentication
permissions:
    id-token: write
    contents: write
    pull-requests: write

env:
    #TF_VAR_vcluster_name: pr-${{ github.event.pull_request.number }}-${{ github.sha }}-${{ github.run_id }}
    TF_VAR_OBSERVE_URL: ${{secrets.OBSERVE_URL}}
    TF_VAR_OBSERVE_TOKEN: ${{secrets.OBSERVE_TOKEN}}
    TF_VAR_cluster_role_arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs: 

  helm-charts-agent-integration-tests:
    name: helm-charts-agent-integration-tests
    runs-on: ubuntu-latest      
    defaults:
        run:
            working-directory: integration #Terrafrom commands and tests are ran from integration directory
    steps:
        - name: Checkout code
          uses: actions/checkout@v4        
        - name: Configure AWS Credentials ## Terraform provider automatically uses these creds 
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            role-session-name: ${{ github.sha }}
            aws-region: ${{ secrets.AWS_REGION }}
        
        - name: Setup Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10' 
        #- run: pip install -r scripts/requirements.txt           

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.8.5

        - name: Install vCluster CLI
          uses: loft-sh/setup-vcluster@main
          with:
            version: v0.20.0
            kubectl-install: false

        - name: Setup additional terraform variable
          run:  echo "TF_VAR_vcluster_name=$(echo pr-${{ github.event.pull_request.number }}-${{ github.sha }}-${{ github.run_id }})" >> $GITHUB_ENV
            
        - name: Create & Connect to vCluster 
          run: |            
            aws eks update-kubeconfig --region us-west-2 --name helm-charts-agent-eks
            vcluster create ${{env.TF_VAR_vcluster_name}}

        - name: Vcluster connect
          run: |            
            vcluster connect  ${{env.TF_VAR_vcluster_name}}
            vcluster list 
        
        - name: Check in vcluster
          run: |
            kubectl config view 
            kubectl get namespaces 

        - name: Delete vCluster
          if: always()
          run: |
            sleep 60
            vcluster delete  ${{env.TF_VAR_vcluster_name}}



        # - name: Terraform Init
        #   id: init
        #   run: terraform init

        # - name: Terraform Validate
        #   id: validate
        #   run: terraform validate -no-color

        # - name: Terraform plan
        #   id: plan
        #   run: |               
        #     terraform plan 
        
        
        # - name: Terraform apply
        #   id: apply
        #   run: |  
        #     terraform apply --auto-approve 
        

        # - name: Terraform destroy 
        #   id: destroy
        #   if: always()
        #   run: |  
        #     sleep 180 # wait 3 mins and destroy, still need to cleanup namespace if helm chart fails  
        #     terraform destroy --auto-approve